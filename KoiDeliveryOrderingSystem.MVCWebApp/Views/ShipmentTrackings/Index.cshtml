@model IEnumerable<KoiDeliveryOrderingSystem.MVCWebApp.Models.ShipmentTracking>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form method="get" class="d-flex gap-5">
    <input type="text" name="handlerName" value="@ViewBag.HandlerName" placeholder="Enter HabdleName..." class="form-control" />
    <input type="text" name="currentLocation" value="@ViewBag.CurrentLocation" placeholder="Enter CurrentLocation..." class="form-control" />
    <input type="text" name="remarks" value="@ViewBag.Remarks" placeholder="Enter Remarks..." class="form-control" />

    <select class="form-select" name="order" aria-label="Order">
        <option selected>Order</option>
        <option value="updateTime">Update time</option>
        <option value="shipmentStatus">Shipment status</option>
    </select>

    <select class="form-select" name="orderByDescending" aria-label="Sort order">
        <option selected>Sort order</option>
        <option value="false">Ascending</option>
        <option value="true">Descending</option>
    </select>

    <input type="date" name="updateDate" class="form-control" />

    <input type="submit" value="Search" class="btn btn-primary"/>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Order)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CurrentLocation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HandlerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EstimatedArrival)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdateTime)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @foreach (var details in item.Order.ShipmentOrderDetails)
                    {
                        <p>(@details.AnimalType.Description) @details.Description</p>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentLocation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShipmentStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HandlerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstimatedArrival)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdateTime)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.TrackingId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.TrackingId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.TrackingId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @if (ViewBag.TotalCount > 0)
    {
        var totalPages = (int)Math.Ceiling((double)ViewBag.TotalCount / 10);
        for (int i = 1; i <= totalPages; i++)
        {
            <a asp-route-pageNumber="@i" asp-route-search="@ViewBag.Search" asp-route-order="@ViewBag.Order" asp-route-orderByDescending="@ViewBag.OrderByDescending">@i</a>
            @if (i < totalPages)
            {
                <span> | </span>
            }
        }
    }
</div>
