// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace KoiDeliveryOrderingSystem.Data.Models;

public partial class FA24_SE1717_PRN231_G1_KoiDeliveryOrderingSystemContext : DbContext
{
    public FA24_SE1717_PRN231_G1_KoiDeliveryOrderingSystemContext()
    {
    }

    public FA24_SE1717_PRN231_G1_KoiDeliveryOrderingSystemContext(DbContextOptions<FA24_SE1717_PRN231_G1_KoiDeliveryOrderingSystemContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AnimalType> AnimalTypes { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<HealthCheck> HealthChecks { get; set; }

    public virtual DbSet<PackagingProcess> PackagingProcesses { get; set; }

    public virtual DbSet<PricingPolicy> PricingPolicies { get; set; }

    public virtual DbSet<ShipmentOrder> ShipmentOrders { get; set; }

    public virtual DbSet<ShipmentOrderDetail> ShipmentOrderDetails { get; set; }

    public virtual DbSet<ShipmentTracking> ShipmentTrackings { get; set; }

    public virtual DbSet<Shipper> Shippers { get; set; }

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection"));

    //    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //        => optionsBuilder.UseSqlServer("Data Source=VANHAITSU\\DANGVANHAI;Initial Catalog=FA24_SE1717_PRN231_G1_KoiDeliveryOrderingSystem;User ID=sa;Password=12345");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AnimalType>(entity =>
        {
            entity.HasKey(e => e.AnimalTypeId).HasName("PK__AnimalTy__1E8A48B6A89549FA");

            entity.ToTable("AnimalType");

            entity.Property(e => e.AnimalTypeId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__Customer__A4AE64D8F58742AF");

            entity.ToTable("Customer");

            entity.Property(e => e.CustomerId).ValueGeneratedNever();
            entity.Property(e => e.Address).HasMaxLength(255);
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.FullName).HasMaxLength(255);
            entity.Property(e => e.MembershipLevel).HasMaxLength(50);
            entity.Property(e => e.PhoneNumber).HasMaxLength(50);
            entity.Property(e => e.PreferredContactMethod).HasMaxLength(100);
            entity.Property(e => e.PreferredShippingMethod).HasMaxLength(100);
        });

        modelBuilder.Entity<HealthCheck>(entity =>
        {
            entity.HasKey(e => e.HealthCheckId).HasName("PK__HealthCh__27355EBFA0AC9D1F");

            entity.ToTable("HealthCheck");

            entity.Property(e => e.HealthCheckId).ValueGeneratedNever();
            entity.Property(e => e.CheckDate).HasColumnType("datetime");
            entity.Property(e => e.Condition).HasMaxLength(100);
            entity.Property(e => e.DoctorName).HasMaxLength(255);
            entity.Property(e => e.NextCheckupDate).HasColumnType("datetime");
            entity.Property(e => e.PackagingType).HasMaxLength(100);
            entity.Property(e => e.Recommendations).HasMaxLength(255);
            entity.Property(e => e.Temperature).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Weight).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.ShipmentOrderDetail).WithMany(p => p.HealthChecks)
                .HasForeignKey(d => d.ShipmentOrderDetailId)
                .HasConstraintName("FK__HealthChe__Shipm__47DBAE45");
        });

        modelBuilder.Entity<PackagingProcess>(entity =>
        {
            entity.HasKey(e => e.PackagingProcessId).HasName("PK__Packagin__087F8713F9C114AE");

            entity.ToTable("PackagingProcess");

            entity.Property(e => e.PackagingProcessId).ValueGeneratedNever();
            entity.Property(e => e.ActualPackagingTime).HasColumnType("datetime");
            entity.Property(e => e.EstimatedPackagingTime).HasColumnType("datetime");
            entity.Property(e => e.HandlerName).HasMaxLength(255);
            entity.Property(e => e.PackagingCost).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.PackagingDate).HasColumnType("datetime");
            entity.Property(e => e.PackagingInstructions).HasMaxLength(255);
            entity.Property(e => e.PackagingType).HasMaxLength(100);
            entity.Property(e => e.QualityCheckStatus).HasMaxLength(100);
            entity.Property(e => e.Remarks).HasMaxLength(255);

            entity.HasOne(d => d.ShipmentOrder).WithMany(p => p.PackagingProcesses)
                .HasForeignKey(d => d.ShipmentOrderId)
                .HasConstraintName("FK__Packaging__Shipm__4E88ABD4");
        });

        modelBuilder.Entity<PricingPolicy>(entity =>
        {
            entity.HasKey(e => e.PricingId).HasName("PK__PricingP__EC306B1225CB18BF");

            entity.ToTable("PricingPolicy");

            entity.Property(e => e.PricingId).ValueGeneratedNever();
            entity.Property(e => e.AdditionalServicePrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.BasePrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Currency).HasMaxLength(10);
            entity.Property(e => e.CustomsFee).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.EffectiveDate).HasColumnType("datetime");
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.InsuranceFee).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ShippingMethod).HasMaxLength(100);
            entity.Property(e => e.WeightRange).HasMaxLength(100);
        });

        modelBuilder.Entity<ShipmentOrder>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PK__Shipment__C3905BCFFF43B557");

            entity.ToTable("ShipmentOrder");

            entity.Property(e => e.OrderId).ValueGeneratedNever();
            entity.Property(e => e.AdditionalFee).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.AdditionalServices).HasMaxLength(255);
            entity.Property(e => e.DestinationLocation).HasMaxLength(255);
            entity.Property(e => e.OrderDate).HasColumnType("datetime");
            entity.Property(e => e.OrderStatus).HasMaxLength(100);
            entity.Property(e => e.OriginLocation).HasMaxLength(255);
            entity.Property(e => e.ShipmentMethod).HasMaxLength(100);
            entity.Property(e => e.TotalWeight).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Customer).WithMany(p => p.ShipmentOrders)
                .HasForeignKey(d => d.CustomerId)
                .HasConstraintName("FK__ShipmentO__Custo__3D5E1FD2");

            entity.HasOne(d => d.PackagingProcess).WithMany(p => p.ShipmentOrderPackagingProcesses)
                .HasForeignKey(d => d.PackagingProcessId)
                .HasConstraintName("FK__ShipmentO__Packa__3F466844");

            entity.HasOne(d => d.Pricing).WithMany(p => p.ShipmentOrderPricings)
                .HasForeignKey(d => d.PricingId)
                .HasConstraintName("FK__ShipmentO__Prici__3E52440B");
        });

        modelBuilder.Entity<ShipmentOrderDetail>(entity =>
        {
            entity.HasKey(e => e.ShipmentOrderDetailId).HasName("PK__Shipment__3B970C5BA9C047DD");

            entity.Property(e => e.ShipmentOrderDetailId).ValueGeneratedNever();
            entity.Property(e => e.Achievement).HasMaxLength(255);
            entity.Property(e => e.AdditionalServices).HasMaxLength(255);
            entity.Property(e => e.Age).HasMaxLength(50);
            entity.Property(e => e.Color).HasMaxLength(100);
            entity.Property(e => e.DateOfEntry).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Fee).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Gender).HasMaxLength(50);
            entity.Property(e => e.HealthStatus).HasMaxLength(100);
            entity.Property(e => e.ImageUrl).HasMaxLength(255);
            entity.Property(e => e.Length).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Origin).HasMaxLength(255);
            entity.Property(e => e.Status).HasMaxLength(100);
            entity.Property(e => e.Weight).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.AnimalType).WithMany(p => p.ShipmentOrderDetails)
                .HasForeignKey(d => d.AnimalTypeId)
                .HasConstraintName("FK__ShipmentO__Anima__44FF419A");

            entity.HasOne(d => d.ShipmentOrder).WithMany(p => p.ShipmentOrderDetails)
                .HasForeignKey(d => d.ShipmentOrderId)
                .HasConstraintName("FK__ShipmentO__Shipm__440B1D61");
        });

        modelBuilder.Entity<ShipmentTracking>(entity =>
        {
            entity.HasKey(e => e.TrackingId).HasName("PK__Shipment__3C19EDF1C8BAD2A6");

            entity.ToTable("ShipmentTracking");

            entity.Property(e => e.TrackingId).ValueGeneratedNever();
            entity.Property(e => e.CurrentLocation).HasMaxLength(255);
            entity.Property(e => e.EstimatedArrival).HasColumnType("datetime");
            entity.Property(e => e.HandlerName).HasMaxLength(255);
            entity.Property(e => e.HumidityDuringTransit).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Remarks).HasMaxLength(255);
            entity.Property(e => e.ShipmentStatus).HasMaxLength(100);
            entity.Property(e => e.TemperatureDuringTransit).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.UpdateTime).HasColumnType("datetime");

            entity.HasOne(d => d.Order).WithMany(p => p.ShipmentTrackings)
                .HasForeignKey(d => d.OrderId)
                .HasConstraintName("FK__ShipmentT__Order__4BAC3F29");

            entity.HasOne(d => d.Shipper).WithMany(p => p.ShipmentTrackings)
                .HasForeignKey(d => d.ShipperId)
                .HasConstraintName("FK__ShipmentT__Shipp__4AB81AF0");
        });

        modelBuilder.Entity<Shipper>(entity =>
        {
            entity.HasKey(e => e.ShipperId).HasName("PK__Shipper__1F8AFE59292A75AF");

            entity.ToTable("Shipper");

            entity.Property(e => e.ShipperId).ValueGeneratedNever();
            entity.Property(e => e.Address).HasMaxLength(255);
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.FullName).HasMaxLength(255);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}